// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: overrall.proto

package api_overrall

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mimis-s/IM-Service/src/common/commonproto/im_error_proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// 获取好友列表
type GenerateUniqueUserIDReq struct {
}

func (m *GenerateUniqueUserIDReq) Reset()         { *m = GenerateUniqueUserIDReq{} }
func (m *GenerateUniqueUserIDReq) String() string { return proto.CompactTextString(m) }
func (*GenerateUniqueUserIDReq) ProtoMessage()    {}
func (*GenerateUniqueUserIDReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_76c8775de52679c4, []int{0}
}
func (m *GenerateUniqueUserIDReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GenerateUniqueUserIDReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GenerateUniqueUserIDReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GenerateUniqueUserIDReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenerateUniqueUserIDReq.Merge(m, src)
}
func (m *GenerateUniqueUserIDReq) XXX_Size() int {
	return m.Size()
}
func (m *GenerateUniqueUserIDReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GenerateUniqueUserIDReq.DiscardUnknown(m)
}

var xxx_messageInfo_GenerateUniqueUserIDReq proto.InternalMessageInfo

type GenerateUniqueUserIDRes struct {
	UserID int64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (m *GenerateUniqueUserIDRes) Reset()         { *m = GenerateUniqueUserIDRes{} }
func (m *GenerateUniqueUserIDRes) String() string { return proto.CompactTextString(m) }
func (*GenerateUniqueUserIDRes) ProtoMessage()    {}
func (*GenerateUniqueUserIDRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_76c8775de52679c4, []int{1}
}
func (m *GenerateUniqueUserIDRes) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GenerateUniqueUserIDRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GenerateUniqueUserIDRes.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GenerateUniqueUserIDRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenerateUniqueUserIDRes.Merge(m, src)
}
func (m *GenerateUniqueUserIDRes) XXX_Size() int {
	return m.Size()
}
func (m *GenerateUniqueUserIDRes) XXX_DiscardUnknown() {
	xxx_messageInfo_GenerateUniqueUserIDRes.DiscardUnknown(m)
}

var xxx_messageInfo_GenerateUniqueUserIDRes proto.InternalMessageInfo

func (m *GenerateUniqueUserIDRes) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func init() {
	proto.RegisterType((*GenerateUniqueUserIDReq)(nil), "api_overrall.GenerateUniqueUserIDReq")
	proto.RegisterType((*GenerateUniqueUserIDRes)(nil), "api_overrall.GenerateUniqueUserIDRes")
}

func init() { proto.RegisterFile("overrall.proto", fileDescriptor_76c8775de52679c4) }

var fileDescriptor_76c8775de52679c4 = []byte{
	// 166 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcb, 0x2f, 0x4b, 0x2d,
	0x2a, 0x4a, 0xcc, 0xc9, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x49, 0x2c, 0xc8, 0x8c,
	0x87, 0x89, 0x49, 0xf1, 0xa4, 0x16, 0x15, 0xe5, 0x17, 0x15, 0x43, 0xe4, 0x94, 0x24, 0xb9, 0xc4,
	0xdd, 0x53, 0xf3, 0x52, 0x8b, 0x12, 0x4b, 0x52, 0x43, 0xf3, 0x32, 0x0b, 0x4b, 0x53, 0x43, 0x8b,
	0x53, 0x8b, 0x3c, 0x5d, 0x82, 0x52, 0x0b, 0x95, 0x0c, 0x71, 0x49, 0x15, 0x0b, 0x89, 0x71, 0xb1,
	0x41, 0x38, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0xcc, 0x41, 0x50, 0x9e, 0x51, 0x11, 0x17, 0x87, 0x3f,
	0xd4, 0x1e, 0xa1, 0x34, 0x2e, 0x11, 0x6c, 0xda, 0x85, 0x54, 0xf5, 0x90, 0x9d, 0xa3, 0x87, 0xc3,
	0x76, 0x29, 0xa2, 0x94, 0x15, 0x2b, 0x31, 0x38, 0x49, 0x9c, 0x78, 0x24, 0xc7, 0x78, 0xe1, 0x91,
	0x1c, 0xe3, 0x83, 0x47, 0x72, 0x8c, 0x13, 0x1e, 0xcb, 0x31, 0x5c, 0x78, 0x2c, 0xc7, 0x70, 0xe3,
	0xb1, 0x1c, 0x43, 0x12, 0x1b, 0xd8, 0x8b, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc4, 0xae,
	0x8f, 0x4e, 0x10, 0x01, 0x00, 0x00,
}

func (m *GenerateUniqueUserIDReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GenerateUniqueUserIDReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GenerateUniqueUserIDReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *GenerateUniqueUserIDRes) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GenerateUniqueUserIDRes) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GenerateUniqueUserIDRes) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.UserID != 0 {
		i = encodeVarintOverrall(dAtA, i, uint64(m.UserID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintOverrall(dAtA []byte, offset int, v uint64) int {
	offset -= sovOverrall(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *GenerateUniqueUserIDReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *GenerateUniqueUserIDRes) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserID != 0 {
		n += 1 + sovOverrall(uint64(m.UserID))
	}
	return n
}

func sovOverrall(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozOverrall(x uint64) (n int) {
	return sovOverrall(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GenerateUniqueUserIDReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOverrall
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GenerateUniqueUserIDReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GenerateUniqueUserIDReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipOverrall(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthOverrall
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GenerateUniqueUserIDRes) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOverrall
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GenerateUniqueUserIDRes: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GenerateUniqueUserIDRes: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserID", wireType)
			}
			m.UserID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOverrall
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipOverrall(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthOverrall
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipOverrall(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowOverrall
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowOverrall
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowOverrall
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthOverrall
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupOverrall
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthOverrall
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthOverrall        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowOverrall          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupOverrall = fmt.Errorf("proto: unexpected end of group")
)
